"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createBaseApp = void 0;
const markdown_1 = require("@vuepress/markdown");
const pluginApi_1 = require("../pluginApi");
const appInit_1 = require("./appInit");
const appPrepare_1 = require("./appPrepare");
const appUse_1 = require("./appUse");
const createAppDir_1 = require("./createAppDir");
const createAppEnv_1 = require("./createAppEnv");
const createAppOptions_1 = require("./createAppOptions");
const createAppSiteData_1 = require("./createAppSiteData");
const createAppVersion_1 = require("./createAppVersion");
const createAppWriteTemp_1 = require("./createAppWriteTemp");
const resolvePluginsFromConfig_1 = require("./resolvePluginsFromConfig");
const resolveThemeInfo_1 = require("./resolveThemeInfo");
/**
 * Create vuepress app
 */
const createBaseApp = (config, isBuild = false) => {
    const version = createAppVersion_1.createAppVersion();
    const options = createAppOptions_1.createAppOptions(config);
    const dir = createAppDir_1.createAppDir(options);
    const env = createAppEnv_1.createAppEnv(options, isBuild);
    const siteData = createAppSiteData_1.createAppSiteData(options);
    const markdown = markdown_1.createMarkdown(options.markdown);
    const pluginApi = pluginApi_1.createPluginApi();
    const writeTemp = createAppWriteTemp_1.createAppWriteTemp(dir);
    const app = {
        version,
        options,
        dir,
        env,
        siteData,
        markdown,
        pluginApi,
        writeTemp,
        use: (...args) => appUse_1.appUse(app, ...args),
        init: () => appInit_1.appInit(app),
        prepare: () => appPrepare_1.appPrepare(app),
    };
    // resolve theme info and use theme plugins
    const themeInfo = resolveThemeInfo_1.resolveThemeInfo(app, options.theme);
    themeInfo.plugins.forEach((plugin) => app.use(plugin));
    app.layouts = themeInfo.layouts;
    // resolve plugins
    const plugins = resolvePluginsFromConfig_1.resolvePluginsFromConfig(app, options.plugins);
    plugins.forEach((plugin) => app.use(plugin));
    return app;
};
exports.createBaseApp = createBaseApp;
