"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDevServerConfig = void 0;
const path_1 = require("path");
const utils_1 = require("@vuepress/utils");
const resolvePort_1 = require("./resolvePort");
const trailingSlashMiddleware_1 = require("./trailingSlashMiddleware");
const createDevServerConfig = async (app, options) => ({
    allowedHosts: 'all',
    compress: true,
    devMiddleware: {
        publicPath: app.options.base,
        writeToDisk: false,
        stats: app.env.isDebug ? 'normal' : 'errors-warnings',
    },
    headers: {
        'access-control-allow-origin': '*',
    },
    historyApiFallback: {
        disableDotRule: true,
        rewrites: [{ from: /./, to: utils_1.path.join(app.options.base, 'index.html') }],
    },
    host: app.options.host,
    hot: true,
    onAfterSetupMiddleware: (server) => {
        var _a;
        (_a = options.afterDevServer) === null || _a === void 0 ? void 0 : _a.call(options, server);
    },
    onBeforeSetupMiddleware: (server) => {
        var _a;
        // use trailing slash middleware to support vuepress routing in dev-server
        // it will be handled by most of the deployment platforms
        server.app.use(trailingSlashMiddleware_1.trailingSlashMiddleware);
        (_a = options.beforeDevServer) === null || _a === void 0 ? void 0 : _a.call(options, server);
    },
    open: app.options.open,
    port: await resolvePort_1.resolvePort(app.options.port),
    static: {
        // `static.directory` will fail on Windows if we do not replace / with \
        directory: app.dir.public().replace('/', path_1.sep),
        publicPath: app.options.base,
        watch: {
            ignoreInitial: true,
            ignored: [
                // Do not watch node_modules
                'node_modules',
            ],
        },
    },
});
exports.createDevServerConfig = createDevServerConfig;
