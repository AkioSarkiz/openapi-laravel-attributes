import { ref, readonly } from 'vue';
import { pagesData } from './pagesData';
/**
 * Empty page data to be used as the fallback value
 */
const pageDataEmpty = readonly({
    key: '',
    path: '',
    title: '',
    lang: '',
    frontmatter: {},
    excerpt: '',
    headers: [],
});
/**
 * Global page data ref
 */
export const pageData = ref(pageDataEmpty);
/**
 * Returns the ref of the data of current page
 */
export const usePageData = () => pageData;
/**
 * Resolve page data according to page key
 */
export const resolvePageData = async (pageKey) => {
    const pageDataResolver = pagesData.value[pageKey];
    if (!pageDataResolver) {
        return pageDataEmpty;
    }
    const pageData = await pageDataResolver();
    return pageData !== null && pageData !== void 0 ? pageData : pageDataEmpty;
};
if (import.meta.webpackHot || import.meta.hot) {
    // reuse vue HMR runtime
    __VUE_HMR_RUNTIME__.updatePageData = (data) => {
        pagesData.value[data.key] = () => Promise.resolve(data);
        if (data.key === pageData.value.key) {
            pageData.value = data;
        }
    };
}
